{"version":3,"sources":["components/Loader/Loader.tsx","api.ts","components/PersonLink.tsx","components/PersonInfo.tsx","components/PeopleTable.tsx","pages/PeoplePage/PeoplePage.tsx","pages/NotFoundPage/NotFoundPage.tsx","pages/HomePage/HomePage.tsx","components/PageNavBarLink.tsx","components/NavBar.tsx","App.tsx","index.tsx"],"names":["Loader","className","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","isWoman","sex","to","slug","classNames","name","PersonInfo","selectedPersonSlug","isSelectedSlug","born","died","mother","motherName","father","fatherName","columns","PeopleTable","people","useParams","map","column","PeoplePage","useState","setPeople","isLoaded","setIsLoaded","isError","setIsError","useEffect","catch","finally","visiblePeople","find","moth","fath","isErrorVisible","isNoPeopleVisible","length","isPeopleTabVisible","NotFoundPage","HomePage","PageNavLink","text","isActive","NavBar","role","App","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.a73e43a5.chunk.js","sourcesContent":["import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => {\n  const isWoman = person.sex === 'f';\n\n  return (\n    <Link to={`/people/${person.slug}`} className={classNames({ 'has-text-danger': isWoman })}>\n      {person.name}\n    </Link>\n  );\n};\n","import classNames from 'classnames';\nimport { Person } from '../types';\nimport { PersonLink } from './PersonLink';\n\ntype Props = {\n  person: Person,\n  selectedPersonSlug: string,\n};\n\nexport const PersonInfo: React.FC<Props> = ({\n  person,\n  selectedPersonSlug,\n}) => {\n  const isSelectedSlug = person.slug === selectedPersonSlug;\n\n  return (\n    <tr\n      key={person.slug}\n      data-cy=\"person\"\n      className={classNames(\n        { 'has-background-warning': isSelectedSlug },\n      )}\n    >\n      <td>\n        <PersonLink person={person} />\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n\n      <td>\n        {person.mother\n          ? (<PersonLink person={person.mother} />)\n          : (person.motherName || '-')}\n      </td>\n\n      <td>\n        {person.father\n          ? (<PersonLink person={person.father} />)\n          : (person.fatherName || '-')}\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../types';\nimport { PersonInfo } from './PersonInfo';\n\ntype Props = {\n  people: Person[];\n};\n\nconst columns = ['Name', 'Sex', 'Born', 'Died', 'Mother', 'Father'];\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { slug = '' } = useParams();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          {columns.map(column => <th key={column}>{column}</th>)}\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PersonInfo\n            key={person.slug}\n            person={person}\n            selectedPersonSlug={slug}\n          />\n        ))}\n\n      </tbody>\n    </table>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Loader } from '../../components/Loader';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { PeopleTable } from '../../components/PeopleTable';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    getPeople()\n      .then(response => setPeople(response))\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoaded(true));\n  }, []);\n\n  const visiblePeople = people.map(person => {\n    const mother = people\n      .find(moth => moth.name === person.motherName);\n    const father = people\n      .find(fath => fath.name === person.fatherName);\n\n    return {\n      ...person,\n      mother,\n      father,\n    };\n  });\n\n  const isErrorVisible = isLoaded && isError;\n  const isNoPeopleVisible = isLoaded && !isError && people.length === 0;\n  const isPeopleTabVisible = isLoaded && !isError && people.length > 0;\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {!isLoaded && <Loader />}\n\n          {isErrorVisible && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {isNoPeopleVisible && (\n            <p\n              data-cy=\"noPeopleMessage\"\n            >\n              There are no people on the server\n            </p>\n          )}\n\n          {isPeopleTabVisible && (<PeopleTable people={visiblePeople} />)}\n\n        </div>\n      </div>\n    </>\n  );\n};\n","export const NotFoundPage: React.FC = () => {\n  return (\n    <>\n      <h1 className=\"title\">Page not found</h1>\n    </>\n  );\n};\n","export const HomePage: React.FC = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ntype Props = {\n  to: string;\n  text: string;\n};\n\nexport const PageNavLink: React.FC<Props> = ({ to, text }) => {\n  return (\n    <NavLink\n      className={({ isActive }) => classNames(\n        'navbar-item',\n        { 'has-background-grey-lighter': isActive },\n      )}\n      to={to}\n    >\n      {text}\n    </NavLink>\n  );\n};\n","import { PageNavLink } from './PageNavBarLink';\n\nexport const NavBar: React.FC = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <PageNavLink to=\"/\" text=\"Home\" />\n          <PageNavLink to=\"/people\" text=\"People\" />\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import './App.scss';\nimport { Navigate, Route, Routes } from 'react-router-dom';\nimport { PeoplePage } from './pages/PeoplePage/PeoplePage';\nimport { NotFoundPage } from './pages/NotFoundPage/NotFoundPage';\nimport { HomePage } from './pages/HomePage/HomePage';\nimport { NavBar } from './components/NavBar';\n\nexport const App = () => {\n  return (\n    (\n      <div data-cy=\"app\">\n        <NavBar />\n\n        <main className=\"section\">\n          <div className=\"container\">\n            <Routes>\n              <Route path=\"/\" element={<HomePage />} />\n              <Route path=\"people\">\n                <Route index element={<PeoplePage />} />\n                <Route path=\":slug\" element={<PeoplePage />} />\n              </Route>\n              <Route path=\"*\" element={<NotFoundPage />} />\n              <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n            </Routes>\n          </div>\n        </main>\n      </div>\n    )\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}